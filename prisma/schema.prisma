generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model client {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  image       String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  saved_video saved_video[]
}

model content_creator {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  video      video[]
}

model saved_video {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  client_id  String?  @db.Uuid
  video_id   String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  client     client?  @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  video      video?   @relation(fields: [video_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email           String            @unique @db.VarChar(255)
  firstName       String?           @db.VarChar(255)
  lastName        String?           @db.VarChar(255)
  roq_user_id     String            @db.VarChar(255)
  tenant_id       String            @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  client          client[]
  content_creator content_creator[]
}

model video {
  id                 String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title              String           @db.VarChar(255)
  content            String           @db.VarChar(255)
  content_creator_id String?          @db.Uuid
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @db.Timestamp(6)
  saved_video        saved_video[]
  content_creator    content_creator? @relation(fields: [content_creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
